version: 1.0.{build}

# you can use {branch} name in version format too
# version: 1.0.{build}-{branch}

# branches to build
branches:
  # whitelist
  only:
    - master
    - production
    - feature/unit-tests


# Skipping commits affecting specific files (GitHub only). More details here: /docs/appveyor-yml
#skip_commits:
#  files:
#    - docs/*
#    - '**/*.html'

# Including commits affecting specific files (GitHub only). More details here: /docs/appveyor-yml
#only_commits:
#  files:
#    - Project-A/
#    - Project-B/

# Maximum number of concurrent jobs for the project
max_jobs: 1

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Build worker image (VM template)
image: Visual Studio 2019

# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input

# clone directory
clone_folder: C:\Users\nwasi\Desktop\Workspace\BlockIoLibs\c-sharp

# setting up etc\hosts file
# this is how to allow failing jobs in the matrix
matrix:
  fast_finish: true     # set this flag to immediately finish build once one of the jobs fails.


before_build:
  # Display .NET Core version
  - cmd: dotnet --version
  # Display minimal restore text
  - cmd: dotnet restore ./BlockIoLib/BlockIoLib.csproj --verbosity m
  - cmd: nuget restore BlockIoLib.sln

test_script:
  # restore packages for our unit tests
  - cmd: dotnet restore ./BlockIoLib.UnitTests/BlockIoLib.UnitTests.csproj --verbosity m
  # run the unit tests (requires changing into the test directory)
  - cmd: cd BlockIoLib.UnitTests
  - cmd: dotnet test


# .NET Core `*.*proj` files patching:
dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: '{version}'
  version_prefix: '{version}'
  package_version: '{version}'
  assembly_version: '{version}'
  file_version: '{version}'
  informational_version: '{version}'


#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: x86

# to add several platforms to build matrix:
#platform:
#  - x86
#  - Any CPU

# build Configuration, i.e. Debug, Release, etc.
configuration: Debug

# to add several configurations to build matrix:
#configuration:
#  - Debug
#  - Release

# Build settings, not to be confused with "before_build" and "after_build".
# "project" is relative to the original build directory and not influenced by directory changes in "before_build".
build:
  parallel: true                  # enable MSBuild parallel builds
  project: BlockIoLib.sln      # path to Visual Studio solution or project
  publish_wap: true               # package Web Application Projects (WAP) for Web Deploy
  publish_wap_xcopy: true         # package Web Application Projects (WAP) for XCopy deployment
  publish_wap_beanstalk: true     # Package Web Applications for AWS Elastic Beanstalk deployment
  publish_wap_octopus: true       # Package Web Applications for Octopus deployment
  publish_azure_webjob: true      # Package Azure WebJobs for Zip Push deployment
  publish_azure: true             # package Azure Cloud Service projects and push to artifacts
  publish_aspnet_core: true       # Package ASP.NET Core projects
  publish_core_console: true      # Package .NET Core console projects
  publish_nuget: true             # package projects with .nuspec files and push to artifacts
  publish_nuget_symbols: true     # generate and publish NuGet symbol packages
  include_nuget_references: true  # add -IncludeReferencedProjects option while packaging NuGet artifacts

#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

artifacts:


  # pushing entire folder as a zip archive
  - path: logs

  # pushing all *.nupkg files in build directory recursively
  - path: '**\*.nupkg'

